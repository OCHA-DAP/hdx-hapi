#!/usr/bin/with-contenv sh

# guard against older stacks
[ -z "$ELASTIC_APM_ENABLED" ] && export ELASTIC_APM_ENABLED=false

[ -z "$UNITD_MAX_WORKERS" ] && export UNITD_MAX_WORKERS=5

if [ "$ELASTIC_APM_ENABLED" == "true" ]; then
    echo "elastic is enabled."
    [ -z "$ELASTIC_APM_SERVICE_NAME" ] && export ELASTIC_APM_SERVICE_NAME=HAPI
    [ -z "$ELASTIC_APM_SERVER_URL"   ] && export ELASTIC_APM_SERVER_URL=http://localhost:8200
    [ -z "$ELASTIC_APM_SECRET_TOKEN" ] && export ELASTIC_APM_SECRET_TOKEN=
    [ -z "$ELASTIC_APM_ENVIRONMENT"  ] && export ELASTIC_APM_ENVIRONMENT=local
    # cp /srv/hapi/docker/unit-elastic.json /var/lib/unit/conf.json
    envsubst < /srv/hapi/docker/unit-elastic.json.tpl > /var/lib/unit/conf.json
else
    echo "apm agents (newrelic and elastic) are disabled."
    # cp /srv/hapi/docker/unit.json /var/lib/unit/conf.json
    envsubst < /srv/hapi/docker/unit.json.tpl > /var/lib/unit/conf.json
fi

# LOGGING_CONF_FILE needs to be set before substituting app.conf.tpl
export LOGGING_CONF_FILE=/srv/logging.conf

# regenerate logging.conf
export LOG_LEVEL="${LOG_LEVEL:-INFO}"
[ ! -z "${LOG_LEVEL_CONSOLE}" ] || export LOG_LEVEL_CONSOLE=${LOG_LEVEL}
[ ! -z "${LOG_LEVEL_JSON}" ] || export LOG_LEVEL_JSON=${LOG_LEVEL}
[ ! -z "${LOG_LEVEL_TXT}" ] || export LOG_LEVEL_TXT=${LOG_LEVEL}
envsubst < /srv/hapi/docker/logging.conf.tpl > /srv/logging.conf

chmod 600 /var/lib/unit/conf.json
chown -R unit /var/log/hapi

cd /srv/hapi
exec unitd --no-daemon --control 127.0.0.1:8080 --log /var/log/hapi/hapi-nu.log
